{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEP,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,WCNKC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAK,SAAAN,GAAO,OACxB,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,WCJpBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmDCG,G,wDAjDb,aAAe,IAAD,8BACZ,gBAmBFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAjBrC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IANH,E,qDAWd,WAAsB,IAAD,OAEnBI,MAAO,8CACNC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAU1C,WAAW,IAAD,EAC0BC,KAAKN,MAA/Bb,EADA,EACAA,SAAUU,EADV,EACUA,YACZU,EAAoBpB,EAASqB,QAAO,SAAArB,GAAQ,OAChDA,EAASH,KAAKyB,cAAcC,SAASb,EAAYY,kBAGnD,OAKE,cAJA,CAIA,OAAK9B,UAAU,MAAf,UACA,kDACE,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA7CVI,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f5566755.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\n// exports Card to CardList.js\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img \r\n            alt=\"monster\" \r\n            src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} \r\n        />\r\n        <h2> {props.monster.name} </h2>\r\n        <p> {props.monster.email} </p>\r\n    </div>\r\n);","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\n// exports cardlist to App.js\r\nexport const CardList = props => (\r\n    <div className='card-list'>\r\n        {props.monsters.map( monster => ( \r\n            <Card key = {monster.id} monster = {monster}/> \r\n        ))}\r\n    </div>\r\n);","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\n//exports SearchBox to App.js \r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input\r\n    className='search'\r\n    type='search' \r\n    placeholder={placeholder} \r\n    onChange={handleChange}\r\n    />\r\n    \r\n)\r\n","import React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nimport './App.css';\n\n// App class is called from index.js and is the main body of the app.\nclass App extends Component {\n\n  // constructor function allows the use of state\n  constructor() {\n    super();\n\n    // state object stores props for this component\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  // componentDidMount function is called after the component has been rendered to the DOM\n  componentDidMount () {\n    // fetch.then is a javascript promise. \n    fetch ('https://jsonplaceholder.typicode.com/users') // This fetch returns a string\n    .then(response => response.json()) // This .then interprets the string into json\n    .then(users => this.setState({monsters: users})) // This .then sets the monsters prop in the state to user in the json data\n  }\n\n  // This fuction handles the change for the SearcgBox component\n  // It being an arrow function means that it can use this.\n  handleChange = e => {\n    this.setState({searchField: e.target.value});\n  }\n\n  // render function \n  render () {\n    const { monsters, searchField } = this.state; // This decontructs the state into individual consts\n    const filteredMonsters =  monsters.filter(monsters => // This line filters monsters \n      monsters.name.toLowerCase().includes(searchField.toLowerCase()) //This checks the serachField input with each monsters.name\n    );\n\n    return (\n      // App div holds the entire app\n      // SearchBox gets it's data from the SeachBox component script\n      // CardList gets it's data from the CardList component script\n      // input handleChange is setting searchField property to whatever is typed in the searchField by the user\n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder='search monsters'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\n//exports App to index.js\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}